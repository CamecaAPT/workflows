# Reusable workflow to build, test, and deploy a .NET project using GitVersion

name: Build, GitVersion, Test, Azure Artifacts Deploy

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      build-configuration:
        required: true
        type: string
      dotnet-version:
        required: true
        type: string
      azure-artifact-feed:
        required: true
        type: string
      validate-tag-main:
        required: false
        default: false
        type: boolean
    secrets:
      azure-package-read-write:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Job scoped environment variables
    env:
      BUILD_CONFIGURATION: ${{ inputs.build-configuration }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      # Ensure tag is in origin/main and not accidentally on another branch
      - name: Verify commit exists in origin/main
        if: ${{ inputs.validate-tag-main == true }}
        run: git branch --remote --contains | grep origin/main
          
      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          source-url: ${{ inputs.azure-artifact-feed }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.azure-package-read-write }}
          
      # Install GitTools
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      # Determine SemVer with GitVersion
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
      
      # Build
      - name: Build
        run: >
          dotnet build
          --no-restore
          --configuration $env:BUILD_CONFIGURATION
          /p:Version=$env:GitVersion_SemVer
          --nologo
      
      # Test (if present)
      - name: Test
        run: >
          dotnet test
          --no-build
          --configuration $env:BUILD_CONFIGURATION
          --verbosity normal
          --nologo
      
      # Create the preview package
      - name: Pack
        run: >
          dotnet pack
          --no-build
          --configuration $env:BUILD_CONFIGURATION
          --include-symbols
          /p:Version=$env:GitVersion_SemVer
          --output .

      - name: Push (Package)
        run: >
          dotnet nuget push
          *.nupkg
          --api-key az
          --skip-duplicate
          
      - name: Push (Symbols Package)
        run: >
          dotnet nuget push
          *.snupkg
          --api-key az
          --skip-duplicate

      - name: Generate Build Summary
        shell: pwsh
        run: |
          $summary = @"
          ## Build Summary
          - **Version**: `$env:GitVersion_SemVer`
          - **Timestamp**: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
          - **Commit**: `${{ github.sha }}`
          - **Build Configuration**: `${{ inputs.build-configuration }}`
          - **Triggered by**: `${{ github.actor }}`
          "@
          $summary | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8 -Append
